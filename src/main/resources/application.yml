spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${EVENTHUB_URL}
          autoCreateTopics: false
          configuration:
            metadata.max.age.ms: 180000 #The period of time in milliseconds after which we force a refresh of metadata even if we havenâ€™t seen any partition leadership changes to proactively discover any new brokers or partitions, Default 300000(5min)
            connections.max.idle.ms: 180000
            security.protocol: SASL_SSL
            sasl.mechanism: PLAIN
            sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="${KAFKA_SASL_PASSWORD}";
          consumerProperties:
            heartbeat.interval.ms: 3000
            session.timeout.ms: 30000
            max.poll.interval.ms: 300000
          producerProperties:
            max.request.size: 1000000
            retries: 3
            request.timeout.ms: 30000
            metadata.max.idle.ms: 180000
            linger.ms: 50 #Rather than immediately sending out a record, the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together. This can improve throughput, Default 0
            delivery.timeout.ms: 90150 #An upper bound on the time to report success or failure after a call to send() returns. This limits the total time that a record will be delayed prior to sending, Default 120000
            compression.type: none
      function:
        definition: consume;supply
      bindings:
        consume-in-0:
          destination: aoai
          group: $Default
          consumer:
            maxAttempts: 1
        supply-out-0:
          destination: aoai
  application:
    name: openai-token-meter
  gson:
    pretty-printing: false
  jpa:
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
    database-platform: org.hibernate.dialect.SQLServerDialect
  #        dialect: org.hibernate.dialect.PostgreSQLDialect
#        default_schema: aoai

  datasource:
    url: ${JDBC_URL}
    username: ${JDBC_USER}
    password: ${JDBC_PASSWORD}
    hikari:
      connection-test-query: SELECT 1
